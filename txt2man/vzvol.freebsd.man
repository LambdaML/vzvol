.\" Text automatically generated by txt2man
.TH vzvol 8 "07 June 2018" "" "FreeBSD System Manager's Manual"
.SH NAME
\fBvzvol — ZFS zvol management utility
\fB
.SH SYNOPSIS
.nf
.fam C
\fBvzvol\fP [\fB-s\fP|--\fIsize\fP \fIsize\fP] [\fB-u\fP|\fB--user\fP \fIname\fP] [\fB-v\fP|\fB--volume\fP \fIname\fP]
[\fB--pool\fP] [\fB-t\fP|\fB--type\fP raw|virtualbox] [\fB--file-system\fP \fIfilesystem\fP]
[\fB--import\fP .img] [\fB-p\fP] [\fB--format\fP \fItype\fP \fIzpool/zvol\fP] [\fB--delete\fP \fIzpool/zvol\fP]
[\fB--list\fP] [\fB-f\fP]

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
\fBvzvol\fP is a shell-script designated to help automate the process of creating a 
ZFS zvol for use as a storage unit for virtualization or testing.
.PP
\fBvzvol\fP was originally created to allow you to back a light .VMDK file with a 
zvol for use with VirtualBox. However, additional functionality has been added 
over time to make \fBvzvol\fP a general-use program.
.SH FLAGS

\fB-s\fP, --\fIsize\fP value=10G
.PP
.nf
.fam C
        Set the size of the zvol. Values should include a unit suffix like 
        M (Megabytes) or G (Gigabytes). Defaults to 10G if unspecified.

.fam T
.fi
\fB-u\fP, \fB--user\fP \fIname\fP
.PP
.nf
.fam C
        Set the user under which we grant permissions for the zvol. If unused, 
        your user will automatically be detected.

.fam T
.fi
\fB-v\fP, \fB--volume\fP \fIname\fP
.PP
.nf
.fam C
        Name of zvol.

.fam T
.fi
\fB-p\fP, \fB--pool\fP
.PP
.nf
.fam C
        Override the logic to choose the zpool you want your zvol on. By default, 
        this script selects the first zpool available, unless your first pool is 
        “bootpool” (this script will default to the second listed pool, usually 
        “zroot” in a default install on FreeBSD).

.fam T
.fi
\fB-t\fP, --\fItype\fP behaviour
.PP
.nf
.fam C
        Set the disk type behaviour. The following types are accepted:

        -t virtualbox
                The default behaviour. vzvol will create a shim VMDK in 
                your HOME to point to the created zvol.

        -t raw
                Create a raw, normal zvol with no shim, in the default location 
                of /dev/zvol/poolname/volumename.

.fam T
.fi
\fB--file-system\fP \fItype\fP
.PP
.nf
.fam C
        Setting this flag allows you to format the zvol with your choice of 
        filesystem. The default for vzvol is to not create a filesystem on the new 
        zvol. Acceptable type values are listed below:

        Filesystems with support in FreeBSD:

        --file-system zfs
        Creates a ZFS filesystem, using the name set in --volume as the 
        pool name. Requires zfs-utils on Linux.

        --file-system  ufs
        Create a FreeBSD-compatible UFS2 filesystem. Unsupported on Linux.

        --file-system fat32
        Create an MS-DOS compatible FAT32 filesystem

        Filesystems which require sysutils/e2fsprogs on FreeBSD:

        --file-system ext2
        Create a Linux-compatible ext2 filesystem.

        --file-system ext3 
        Create a Linux-compatible ext3 filesystem.

        --file-system ext4
        Creates a Linux-compatible ext4 filesystem.

        Filesystems which require sysutils/xfsprogs:

        --file-system xfs
        Create an XFS filesystem.

.fam T
.fi
\fB--import\fP source
.PP
.nf
.fam C
        Import the contents of a downloaded disk image to your newly created zvol. 
        This is useful when using a pre-installed VM image, such as 
        https://github.com/UN/FreeBSD-On-Linode.

.fam T
.fi
\fB-p\fP
.PP
.nf
.fam C
        Used with --import to show a progress bar for image data importation to the
        vzol. Requires that sysutils/pv be installed.

.fam T
.fi
\fB-f\fP
.PP
.nf
.fam C
        Used to force import or deletion

.fam T
.fi
\fB--format\fP \fItype\fP zvol
.PP
.nf
.fam C
        Reformat a zvol created by vzvol, using the same options and arguments as 
        --file-system.

.fam T
.fi
Example: 
.PP
.nf
.fam C
        vzvol --format xfs zroot/smartos

.fam T
.fi
\fB--delete\fP zvol
.PP
.nf
.fam C
        Delete the zvol you specify. If a .VMDK file is associated with the zvol, 
        the .VMDK will also be deleted. You MUST specify the zpool the zvol resides
        on. You can get this information from running “vzvol --list” or 
        “zfs list -t volume”.

.fam T
.fi
Example:
.PP
.nf
.fam C
        vzvol --delete zroot/smartos11

.fam T
.fi
.TP
.B
\fB--list\fP
.PP
.nf
.fam C
        List all zvols on your system, the type, any associated .VMDK files, 
        how much space on disk is used by the zvol, the maximum size of the zvol 
        capacity, and the filesystem, if vzvol can determine it. Imported images 
        will list FS as “imported”, and any zvol that doesn't have “custom:FS” set 
        will report “unknown”.

.fam T
.fi
.SH SEE ALSO
\fBxfs\fP(8), \fBzpool\fP(8)
.SH AUTHORS
This script is released under the 2-clause BSD license. © 2017, 2018
RainbowHackerHorse <https://github.com/RainbowHackerHorse/\fBvzvol\fP>
